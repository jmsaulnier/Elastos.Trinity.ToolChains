{"version":3,"sources":["./src/app/pages/level2/level2.page.html","./src/app/pages/level2/level2.module.ts","./src/app/pages/level2/level2.page.scss","./src/app/pages/level2/level2.page.ts"],"names":[],"mappings":"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","file":"pages-level2-level2-module.js","sourcesContent":["export default \"<ion-header no-border>\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"header-btns\\\">\\n      <ion-button (click)=\\\"gameService.minimizeApp()\\\">\\n        <ion-icon name=\\\"remove-circle\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Level 2</ion-title>\\n    <ion-buttons slot=\\\"end\\\" class=\\\"header-btns\\\">\\n      <ion-button (click)=\\\"gameService.closeApp()\\\">\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n\\n    <!-- Show loading screen -->\\n    <div align=\\\"center\\\" *ngIf=\\\"!startGame\\\">\\n      <br>\\n      <h2>Match All Coins!</h2>\\n      <p>You have a total of <b>{{ userLife }}</b> tries.</p>\\n      <br>\\n      <h4>Start in <span style=\\\"color:#CC0000;font-size:24px;\\\">{{ countDown }}</span>...</h4>\\n    </div>\\n\\n    <!-- Actual cards display -->\\n    <div align=\\\"center\\\" *ngIf=\\\"startGame && gameState === 'init'\\\">\\n      <h2>Match All Coins!</h2>\\n      <ion-row align-items-center text-center size=\\\"8\\\">\\n\\n        <ion-col align-self-center size=\\\"3\\\" *ngFor=\\\"let c of cardsArray; let i = index\\\">\\n          <!-- show card background -->\\n          <img src=\\\"../../assets/img/cards/background.jpg\\\" *ngIf=\\\"c.pos != selectCard1pos && c.pos != selectCard2pos && c.val > -1\\\" (click)=\\\"selectCard(c.pos, c.val, i)\\\" style=\\\"width:80px; height:80px; border: solid 2px #000; border-radius: 12px;\\\">\\n          <!-- show card 1 selected -->\\n          <img [src]=\\\"imageDir + gameService.images[c.val] + '.png'\\\" *ngIf=\\\"c.pos == selectCard1pos && c.val > -1\\\" style=\\\"width:80px; height:80px; border: solid 2px #000; border-radius: 12px;\\\">\\n          <!-- show card 2 selected -->\\n          <img [src]=\\\"imageDir + gameService.images[c.val] + '.png'\\\" *ngIf=\\\"c.pos == selectCard2pos && c.val > -1\\\" style=\\\"width:80px; height:80px; border: solid 2px #000; border-radius: 12px;\\\">\\n          <!-- show hidden card -->\\n          <img *ngIf=\\\"c.val == -1\\\" style=\\\"width:80px; height:80px; border: solid 2px #000; border-radius: 12px;visibility: hidden;\\\">\\n\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n\\n    <div align=\\\"center\\\" *ngIf=\\\"startGame && gameState === 'init'\\\">\\n      <ion-row>\\n        <ion-col col-9 no-padding>\\n          <p no-margin>You have <span style=\\\"color:#00CC00; font-size: 24px;\\\">{{ userLife }}</span> tries...</p>\\n        </ion-col>\\n        <ion-col no-padding>\\n          <p no-margin><span style=\\\"color:#CC0000; font-size: 24px;\\\">{{ shownTime }}</span></p>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n\\n    <!-- Show Win screen -->\\n    <div *ngIf=\\\"gameState === 'win'\\\" align=\\\"center\\\">\\n      <br>\\n      <h2>You <span style=\\\"color:#00CC00; font-size: 28px;\\\">WON</span>!</h2>\\n      <p>You are halfway there! Ready to proceed?</p>\\n      <br>\\n      <ion-button mode=\\\"ios\\\" size=\\\"large\\\" color=\\\"success\\\" (click)=\\\"nextLevel()\\\">\\n        <ion-icon name=\\\"repeat\\\"></ion-icon>\\n        &nbsp; &nbsp; Level 3\\n      </ion-button>\\n    </div>\\n\\n    <!-- Show Lose screen -->\\n    <div *ngIf=\\\"gameState === 'lose'\\\" align=\\\"center\\\">\\n      <br>\\n      <h2>You <span style=\\\"color:#CC0000; font-size: 28px;\\\">LOST</span>!</h2>\\n      <p>Would you like to try again?</p>\\n      <br>\\n      <ion-button mode=\\\"ios\\\" size=\\\"large\\\" color=\\\"danger\\\" routerLink=\\\"/level1\\\" routerDirection=\\\"back\\\">\\n        <ion-icon name=\\\"repeat\\\"></ion-icon>\\n        &nbsp; &nbsp; Reset Game\\n      </ion-button>\\n    </div>\\n\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Level2Page } from './level2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Level2Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Level2Page]\n})\nexport class Level2PageModule {}\n","export default \"h2 {\\n  font-weight: 800; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icGlldHRlL0RvY3VtZW50cy9QZXJzby9EZXYvZWxhc3Rvcy9HaXRodWJzL0VsYXN0b3MuVHJpbml0eS9Ub29sQ2hhaW5zL2NsaS9zcmMvYXNzZXRzL2RhcHB0ZW1wbGF0ZS9hbmd1bGFyL2dhbWUvc3JjL2FwcC9wYWdlcy9sZXZlbDIvbGV2ZWwyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbGV2ZWwyL2xldmVsMi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMiB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-level2',\n  templateUrl: './level2.page.html',\n  styleUrls: ['./level2.page.scss'],\n})\nexport class Level2Page implements OnInit {\n\n  public gameState;  // Keep track of current game state\n  public startGame;  // Will set to false to display intro\n  public countDown;  // Lets show 3 second countDown\n  public totalTime;  // How long the player has to win\n  public countTime;  // Elapsed time while game is playing\n  public shownTime;  // Time shown as string format\n  public interTime;  // Timer: 1 second for in game tracking\n  public interCount; // Timer: 1 second for in game counter\n\n  public cardsTotal = 12;\t// Total cards to match (divided by 2)\n  public cardsArray = [];\t// Store all card pairs\n  public userLife = 5;\t\t// Total amount of tries user gets\n  public imageDir = '../../assets/img/coins/';\n\n  public selectCard1pos = -1;\t// Selected card #1 position\n  public selectCard1val = -1;\t// Selected card #1 value\n  public selectCard2pos = -1;\t// Selected card #2 position\n  public selectCard2val = -1;\t// Selected card #2 value\n  public selectOldPosix = -1; // Store old position\n\n  public debugText = \"Debug text goes here! :)\"\n\n  constructor(\n    public gameService: GameService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  \tthis.restartGame();\n  }\n\n  // Function to populate cards array with\n  // position and value pairs from 0 to 6\n  populateCards() {\n  \tthis.cardsArray = [];\n  \tvar x = 0;\n  \tvar y = 0;\n  \tfor (var i = 0; i < this.cardsTotal; i++) {\n  \t\t// Push card to array and assign value\n  \t\tthis.cardsArray.push({pos:i, val:y});\n  \t\t// Flip x to assign next card same value\n  \t\tif (x === 0) x = 1;\n  \t\telse { x = 0; y++ }\n  \t}\n  }\n\n  // Function to select a card\n  selectCard(pos, val, i) {\n    var actOne = false;\n\n    // Code to select the second card\n    if (this.selectCard1pos > -1 && this.selectCard2pos == -1) {\n      this.selectCard2pos = pos;\n      this.selectCard2val = val;\n      actOne = true;\n    }\n\n  \t// Code to select the first card\n    if (this.selectCard1pos == -1 && !actOne) {\n    \tthis.selectCard1pos = pos;\n    \tthis.selectCard1val = val;\n      this.selectOldPosix = i;\n    }\n\n    // If we have both cards selected, check for match or fail\n    if (actOne && this.selectCard1pos > -1 && this.selectCard2pos > -1) {\n      setTimeout(() => {\n        // if the cards match, do this...\n        if (this.selectCard1val === this.selectCard2val) {\n          this.debugText = \"Cards match!\";\n          this.cardsArray.splice(this.selectOldPosix, 1, {pos: this.selectOldPosix, val: -1});\n          this.cardsArray.splice(i, 1, {pos: i, val: -1});\n          this.resetSelects();\n          this.winCon();\n        }\n        // Otherwise, take a life and reset\n        else {\n          this.debugText = \"Cards don't match!\";\n          this.userLife -= 1;\n          this.resetSelects();\n          if (this.userLife <= 0) this.loseCon();\n        }\n      }, 1000);\n    }\n  }\n\n    // Function to shuffle an array\n    shuffle(a) {\n\t    var j, x, i;\n\t    for (i = a.length; i; i--) {\n\t        j = Math.floor(Math.random() * i);\n\t        x = a[i - 1];\n\t        a[i - 1] = a[j];\n\t        a[j] = x;\n\t    }\n  }\n\n  nextLevel() {\n    this.restartGame();\n    this.router.navigate(['level3'])\n  }\n\n  // Function to restart the game\n  restartGame() {\n    this.gameState = 'load';      // Keep track of current game state\n    this.startGame = false;       // Will set to false to display intro\n    this.countDown = 3;           // Lets show 3 second countDown\n    this.totalTime = 60;          // How long the player has to win\n    this.countTime = 0;           // Elapsed time while game is playing\n    this.shownTime = 0;           // Time shown as string format\n    this.interCount = null;       // Timer: 1 second for in game counter\n\n    this.userLife = 5;\n    this.resetSelects();\n    this.populateCards();\n    this.shuffle(this.cardsArray);\n    this.shuffle(this.gameService.images);\n\n    setTimeout(() => {\n      this.startGame = true;    // Actually start the game\n      this.gameState = 'init';  // Game has been initialized\n    }, this.countDown*1000);\n\n    // This will subtract 1 from countdown start time\n    this.interCount = setInterval(() => {\n      if (this.countDown === 0) {\n        clearInterval(this.interCount);\n        this.interCount = null;\n      }\n      else this.countDown -= 1;\n    }, 1000);\n\n    // This timer will keep track of time once the game starts\n    setTimeout(() => {\n      this.interTime = setInterval(() => {\n        if (this.countTime >= this.totalTime) this.loseCon();\n        if (this.gameState == 'init') {\n          this.countTime += 1;  // Add 1 second to counter\n          var minutes = Math.floor((this.totalTime-this.countTime) / 60);\n          var seconds = (this.totalTime-this.countTime) - minutes * 60;\n          this.shownTime = minutes.toString() + \":\" + seconds.toString();\n        }\n        else {\n          clearInterval(this.interTime);\n          this.interTime = null;\n        }\n      }, 1000);\n    }, this.countDown*1000+200);\n  }\n\n  // Win condition\n  winCon() {\n    var winCheck = false;\n    // If at least 1 or more cards have not been solved,\n    // then user hasn't won yet\n    for (var i = 0; i < this.cardsArray.length; i++)\n      if (this.cardsArray[i].val != -1) winCheck = true;\n    // if winCheck is false, player has won the game\n    if (winCheck == false) this.gameState = 'win';\n  }\n\n  // Lose condition\n  loseCon() {\n    this.gameState = 'lose';\n  }\n\n\t// Function to reset selected cards\n\tresetSelects() {\n\t\tthis.selectCard1pos = -1;\t// Selected card #1 position\n  \t\tthis.selectCard1val = -1;\t// Selected card #1 value\n  \t\tthis.selectCard2pos = -1;\t// Selected card #2 position\n  \t\tthis.selectCard2val = -1;\t// Selected card #2 value\n\t}\n}\n"],"sourceRoot":"webpack:///"}